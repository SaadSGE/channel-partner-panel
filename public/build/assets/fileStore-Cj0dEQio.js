import{an as d}from"./main-vt969jOT.js";import{$ as n}from"./api-CEdUtpEp.js";const p=()=>Date.now().toString(36)+Math.random().toString(36).substr(2,9),f=d("fileStore",{state:()=>({files:[],filePaths:[],errors:[]}),actions:{async downloadAllFiles(o=null){console.log(o);try{const e=o.map(t=>({path:t.path,file_name:t.filename})),s=new FormData;s.append("documents",JSON.stringify(e));const i=(await n("/download-all",{method:"POST",body:s,onUploadProgress:t=>{if(t.lengthComputable){const l=Math.round(t.loaded/t.total*100);console.log(`Progress: ${l}%`)}}})).data.zipUrl,r=document.createElement("a");r.href=i,r.download="documents.zip",r.click()}catch(e){console.error("Error downloading all files:",e),this.errors.push(e.response?e.response.data.errors:["An unexpected error occurred"])}},addFile(o){this.files.push(o)},updateFileProgress(o,e){const s=this.files.find(a=>a.id===o);s&&(s.progress=e)},async removeFile(o){const e=this.files.findIndex(s=>s.id===o);if(e!==-1){const s=this.files[e];this.filePaths=this.filePaths.filter(a=>a!==s.path),this.files.splice(e,1)}},updateFilePath(o,e){const s=this.files.find(a=>a.id===o);s&&(s.path=e,this.filePaths.push(e))},resetFiles(){this.files=[],this.filePaths=[],this.errors=[]},async uploadFile(o,e){const s=p(),a={id:s,filename:e.name,progress:0,path:""};this.addFile(a);const i=new FormData;i.append(o,e);try{const r=await n("/student-document-upload",{method:"POST",body:i,onUploadProgress:t=>{if(t.lengthComputable){const l=Math.round(t.loaded/t.total*100);this.updateFileProgress(s,l)}}});return this.updateFilePath(s,r.data),s}catch(r){throw console.error("Error uploading file:",r),this.errors.push(r.response?r.response.data.errors:["An unexpected error occurred"]),r}}}});export{f as u};
