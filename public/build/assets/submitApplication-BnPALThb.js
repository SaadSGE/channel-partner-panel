import{ao as c}from"./main-MxZU-_sO.js";import{$ as l}from"./api-C4zgnGph.js";import{h as p}from"./helpers-DKySKe8A.js";const h=()=>Date.now().toString(36)+Math.random().toString(36).substr(2,9),g=c("fileStore",{state:()=>({files:[],filePaths:[],errors:[]}),actions:{async downloadAllFiles(t=null){console.log(t);try{const s=t.map(r=>({path:r.path,file_name:r.filename})),e=new FormData;e.append("documents",JSON.stringify(s));const a=(await l("/download-all",{method:"POST",body:e,onUploadProgress:r=>{if(r.lengthComputable){const n=Math.round(r.loaded/r.total*100);console.log(`Progress: ${n}%`)}}})).data.zipUrl,o=document.createElement("a");o.href=a,o.download="documents.zip",o.click()}catch(s){console.error("Error downloading all files:",s),this.errors.push(s.response?s.response.data.errors:["An unexpected error occurred"])}},addFile(t){this.files.push(t)},updateFileProgress(t,s){const e=this.files.find(i=>i.id===t);e&&(e.progress=s)},async removeFile(t){const s=this.files.findIndex(e=>e.id===t);if(s!==-1){const e=this.files[s];this.filePaths=this.filePaths.filter(i=>i!==e.path),this.files.splice(s,1)}},updateFilePath(t,s){const e=this.files.find(i=>i.id===t);e&&(e.path=s,this.filePaths.push(s))},resetFiles(){this.files=[],this.filePaths=[],this.errors=[]},async uploadFile(t,s){const e=h(),i={id:e,filename:s.name,progress:0,path:""};this.addFile(i);const a=new FormData;a.append(t,s);try{const o=await l("/student-document-upload",{method:"POST",body:a,onUploadProgress:r=>{if(r.lengthComputable){const n=Math.round(r.loaded/r.total*100);this.updateFileProgress(e,n)}}});return this.updateFilePath(e,o.data),e}catch(o){throw console.error("Error uploading file:",o),this.errors.push(o.response?o.response.data.errors:["An unexpected error occurred"]),o}}}}),y=c({id:"application-store",state:()=>({errors:[],successMessage:""}),actions:{async updateApplicationsFile(t,s){try{const e=await l("/update-application-file",{method:"POST",body:JSON.stringify({application_id:t,document_paths:s}),headers:{"Content-Type":"application/json"}});return this.successMessage="Application submitted successfully",e.data}catch(e){throw console.error("Error submitting application:",e),this.errors=e.response?e.response.data.errors:["An unexpected error occurred"],e}},async submitApplication(t,s,e,i,a,o,r,n=null){try{const d=await l("/application",{method:"POST",body:JSON.stringify({...t,course_id:s,intake_id:e,university_id:i,country_id:a,course_details_id:o,document_paths:r,student_id:n}),headers:{"Content-Type":"application/json"}});return this.errors={},this.successMessage="Application submitted successfully",d.data}catch(d){p(d)}}}});export{g as a,y as u};
