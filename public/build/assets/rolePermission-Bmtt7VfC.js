import{bg as p,bh as s}from"./main-Bme8oyon.js";import{h as t}from"./helpers-CXnu_iWl.js";const l=p({id:"role-permission",state:()=>({roles:[],permissions:[],loading:!1}),actions:{async getAllRoles(){try{const e=await s("/roles",{method:"GET",headers:{"Content-Type":"application/json"}});this.roles=e.data}catch(e){throw console.error("Error getting application list:",e),this.errors=e.response?e.response.data.errors:["An unexpected error occurred"],e}},async getAllPermission(){try{const e=await s("/permissions",{method:"GET",headers:{"Content-Type":"application/json"}});this.permissions=e.data}catch(e){throw console.error("Error getting application list:",e),this.errors=e.response?e.response.data.errors:["An unexpected error occurred"],e}},async getAllPermissionForTable({page:e,perPage:r,sortBy:n,orderBy:a,searchQuery:i}){this.loading=!0;try{const o=await s("/permissions-table",{method:"GET",params:{page:e,perPage:r,sortBy:n,orderBy:a,searchQuery:i},headers:{"Content-Type":"application/json"}});return this.permissions=o.data,this.loading=!1,o}catch(o){throw console.error("Error getting permissions:",o),this.loading=!1,o}},async setRolePermission(e){try{return(await s(`/roles/${e.name}/permissions`,{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}})).data}catch(r){throw console.error("Error setting role permissions:",r),this.errors=r.response?r.response.data.errors:["An unexpected error occurred"],r}},async updateRolePermission(e){try{return(await s(`/roles/${e.name}/permissions`,{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}})).data}catch(r){throw console.error("Error setting role permissions:",r),this.errors=r.response?r.response.data.errors:["An unexpected error occurred"],r}},async createPermission(e){try{return(await s("/permissions",{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}})).data}catch(r){t(r)}},async updatePermission(e){try{return(await s(`/permissions/${e.id}`,{method:"PUT",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}})).data}catch(r){t(r)}},async deletePermission(e){try{await s(`/permissions/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json"}})}catch(r){t(r)}}}});export{l as u};
